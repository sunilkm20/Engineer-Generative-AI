import os
import tensorflow as tf
import matplotlib.pyplot as plt
import numpy as np
import PIL.Image
import tensorflow_hub as hub
import tensorflow as tf
import numpy as np
from PIL import Image

os.environ['TFHUB_MODEL_LOAD_FORMAT'] = 'COMPRESSED'

def tensor_to_image(tensor):
    tensor = tf.image.convert_image_dtype(tensor, dtype=tf.uint8, saturate=True)
    tensor = tf.squeeze(tensor, axis=0)
    return Image.fromarray(tensor.numpy())

def load_and_preprocess_image(path_to_img, max_dim=512):
    # Read image file
    img = tf.io.read_file(path_to_img)
    img = tf.image.decode_image(img, channels=3)  # Decode image with 3 channels (RGB)

    # Convert image to float32
    img = tf.image.convert_image_dtype(img, tf.float32)

    # Rescale image while maintaining aspect ratio
    shape = tf.cast(tf.shape(img)[:-1], tf.float32)
    long_dim = max(shape)
    scale = max_dim / long_dim
    new_shape = tf.cast(shape * scale, tf.int32)
    img = tf.image.resize(img, new_shape)

    # Add a batch dimension
    img = img[tf.newaxis, :]
    return img

def display_images(content_image, style_image, stylized_image):
    fig, axs = plt.subplots(1, 3, figsize=(12, 12))

    images = [content_image, style_image, stylized_image]
    titles = ['Content Image', 'Style Image', 'Stylized Image']

    for i, ax in enumerate(axs):
        ax.imshow(np.squeeze(images[i]))
        ax.set_title(titles[i])
        ax.axis('off')

    plt.tight_layout()
    plt.show()

def main():
    content_image = load_and_preprocess_image('/content/shubhankar-bhowmick-we6ViKNiRro-unsplash.jpg')
    style_image = load_and_preprocess_image('/content/tamara-menzi-n-vnWQmmVoY-unsplash.jpg')

    hub_model = hub.load('https://tfhub.dev/google/magenta/arbitrary-image-stylization-v1-256/2')
    stylized_image = hub_model(tf.constant(content_image), tf.constant(style_image))[0]
    
    output_image = tensor_to_image(stylized_image)
    display_images(content_image, style_image, output_image)

if __name__ == "__main__":
    main()
